CREATE OR REPLACE TRIGGER IMPORT_PEN_DETAIL_BEFORE_INSERT BEFORE
    INSERT ON IMPORT_PEN_DETAIL FOR EACH ROW
DECLARE
    PEN_EXIST_STOCK      INT;
    CURR_STOCK_ID        INT;
    CURR_STOCK_AVAILABLE INT;
    CURR_STOCK_CAPACITY  INT;
BEGIN
    SELECT
        STOCK_ID INTO CURR_STOCK_ID
    FROM
        IMPORT_PEN
    WHERE
        IMPORT_PEN_ID=:NEW.IMPORT_PEN_ID;
    SELECT
        NVL(MIN(PEN_ID), -1) INTO PEN_EXIST_STOCK
    FROM
        STOCK_DETAIL
    WHERE
        PEN_ID=:NEW.PEN_ID
        AND STOCK_ID=CURR_STOCK_ID;
    IF(PEN_EXIST_STOCK=-1) THEN
        INSERT INTO STOCK_DETAIL VALUES (
            :NEW.PEN_ID,
            CURR_STOCK_ID,
            0
        );
    ELSE
        SELECT
            STOCK_AVAILABLE,
            STOCK_CAPACITY INTO CURR_STOCK_AVAILABLE,
            CURR_STOCK_CAPACITY
        FROM
            C##ADMIN.STOCK@DB_ADMIN
        WHERE
            STOCK_ID=CURR_STOCK_ID;
        IF(CURR_STOCK_CAPACITY<CURR_STOCK_AVAILABLE+:NEW.QUATITY) THEN
 --raise_application_error(-20000, 'Stock not enough capacity');
            DBMS_OUTPUT.PUT_LINE('Stock not enough capacity');
        END IF;
    END IF;
END;
 --cập nhật số lượng pen có trong kho sau khi thêm chi tiết sản phẩm
CREATE OR REPLACE TRIGGER IMPORT_PEN_DETAIL_AFTER_INSERT AFTER INSERT ON IMPORT_PEN_DETAIL FOR EACH ROW DECLARE PEN_EXIST_STOCK INT;
CURR_STOCK_ID INT;
CURR_STOCK_AVAILABLE INT;
CURR_STOCK_CAPACITY INT;
BEGIN
    SELECT
        STOCK_ID INTO CURR_STOCK_ID
    FROM
        IMPORT_PEN
    WHERE
        IMPORT_PEN_ID=:NEW.IMPORT_PEN_ID;
    UPDATE STOCK_DETAIL
    SET
        STOCK_AVAILABLE=STOCK_AVAILABLE+:NEW.QUATITY
    WHERE
        STOCK_ID=CURR_STOCK_ID
        AND PEN_ID=:NEW.PEN_ID;
    UPDATE C##ADMIN.STOCK@DB_ADMIN
    SET
        STOCK_AVAILABLE=STOCK_AVAILABLE+:NEW.QUATITY
    WHERE
        STOCK_ID=CURR_STOCK_ID;
END;
 --khởi tạo điểm mặc định cho user customer sau khi thêm khách hàng
CREATE OR REPLACE TRIGGER CUSTOMER_AFTER_INSERT AFTER INSERT ON CUSTOMER FOR EACH ROW BEGIN INSERT INTO C##ADMIN.CUSTOMER@DB_ADMIN VALUES(
    :NEW.CUST_ID,
    0
);
END;
 --cập nhật giá trước khi lưu thông tin sản phẩm vào đơn hàng
CREATE OR REPLACE TRIGGER ORDERS_DETAILS_BEFORE_INSERT BEFORE INSERT ON ORDERS_DETAILS FOR EACH ROW DECLARE O_PRICE VARCHAR2(
    10
);
STOCK_AVAILABLE_PEN INT;
CURR_STOCK_ID INT;
BEGIN
    SELECT
        PEN_PRICE INTO O_PRICE
    FROM
        PEN
    WHERE
        PEN_ID=:NEW.PEN_ID;
    :NEW.PRICE := O_PRICE;
END;
 --cập nhật tổng đơn hàng sau khi thêm sản phẩm vào đơn hàng
CREATE OR REPLACE TRIGGER ORDERS_DETAILS_AFTER_INSTERT AFTER INSERT ON ORDERS_DETAILS FOR EACH ROW DECLARE CURR_STOCK_ID NUMBER;
BEGIN
    SELECT
        STOCK_ID INTO CURR_STOCK_ID
    FROM
        ORDERS
    WHERE
        ORDER_ID=:NEW.ORDER_ID;
 -- cập nhật tổng tiền của đơn hàng
    UPDATE ORDERS
    SET
        TOTAL = TOTAL + :NEW.QUATITY * :NEW.PRICE
    WHERE
        ORDERS.ORDER_ID = :NEW.ORDER_ID;
 --cập nhật số lượng pen có trong kho
    UPDATE STOCK_DETAIL
    SET
        STOCK_DETAIL.STOCK_AVAILABLE = STOCK_DETAIL.STOCK_AVAILABLE - :NEW.QUATITY
    WHERE
        STOCK_DETAIL.PEN_ID = :NEW.PEN_ID
        AND STOCK_DETAIL.STOCK_ID=CURR_STOCK_ID;
 --cập nhật số lượng hàng có bên trong kho
    UPDATE C##ADMIN.STOCK@DB_ADMIN
    SET
        STOCK_AVAILABLE = STOCK_AVAILABLE - :NEW.QUATITY
    WHERE
        STOCK_ID=CURR_STOCK_ID;
END;